package com.wide.common.model;

import java.util.ArrayList;
import java.util.List;

import com.wide.common.model.base.BaseExamAnswer;
import com.wide.common.model.query.QueryDict;
import com.wide.common.model.query.QueryExaminee;
import com.wide.util.DateUtil;
import com.wide.util.TypeChecker;
import com.wide.viewmodel.DataTablesModel;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class ExamAnswer extends BaseExamAnswer<ExamAnswer> {
	public static final ExamAnswer dao = new ExamAnswer();
	
	/**
	 * 通过exam_id查询考生列表
	 * @param examId
	 * @return
	 */
	public List<ExamAnswer> getExamAnswerList(String examId,String examineeId){
		List<ExamAnswer> list = find("select t.* from sys_exam_answer t where t.exam_id = ? and t.examinee_id = ?",examId,examineeId);
		return list;
	}

	/**
	 * datatables 查询
	 * @param pageNum
	 * @param pageSize
	 * @param queryDict
	 * @return
	 */
	public DataTablesModel pageDataTables(int pageNum, int pageSize, QueryExaminee queryExaminee) {
	    final List<Object> parameters = new ArrayList<Object>();
	    String select = "select DISTINCT t.id,t1.sort,t.title,t.questionanswer,t1.scores,t4.answerinfo,t4.answerscores,t4.judgetype";
	    StringBuilder sqlExceptSelect = new StringBuilder(" from sys_questions t,sys_exampapers_question t1,sys_exampapers t2,sys_exam t3,sys_exam_answer t4 ");
	    /**
	    if (search!=null&&!search.equals("")) {
	        sqlExceptSelect.append(" AND (b.title like ? or b.content like ? )");
	        parameters.add("%" + search + "%");
	        parameters.add("%" + search + "%");
	    } 
	     **/
	    sqlExceptSelect.append(whereQuery(queryExaminee));
	    sqlExceptSelect.append(orderbyQuery(queryExaminee));
	    
	    return this.paginateDataTables(pageNum, pageSize, select.toString(), sqlExceptSelect.toString());
	}
	
	/**
	 * query where查询
	 * 
	 * */
	private String whereQuery(QueryExaminee queryExaminee){
		String where=" where t.id = t1.question_id and t1.exampapers_id = t2.id and t2.id = t3.exampapers_id and t4.exam_id = t3.id and t4.question_id = t.id ";
		if(!TypeChecker.isEmpty(queryExaminee.getExamId())){
			where += " and t3.id = '"+queryExaminee.getExamId()+"'";
		}
		if(!TypeChecker.isEmpty(queryExaminee.getExamineeId())){
			where  +=" and t4.examinee_id = '"+queryExaminee.getExamineeId()+"'";
		}else{
			where  +=" and 1 <> 1";
		}
		return where;
		
	}
	/**
	 * query order by 
	 * 
	 * */
	private String orderbyQuery(QueryExaminee queryExaminee){
		String orderby = " order by t1.sort asc ";
		return orderby;
		
	}

	
	
}
