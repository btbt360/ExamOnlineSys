package com.wide.common.model;

import com.wide.common.model.base.BaseQuestions;
import com.wide.common.model.query.QueryQuestion;
import com.wide.viewmodel.DataTablesModel;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Questions extends BaseQuestions<Questions> {
	public static final Questions dao = new Questions();

	
	@SuppressWarnings("rawtypes")
	public DataTablesModel pageDataTables(int pageNum, int pageSize, QueryQuestion question) {
		// TODO Auto-generated method stub
	    String select = "select id,questiontype,code,title,questionanswer,isenable";
	    StringBuilder sqlExceptSelect = new StringBuilder(" from sys_questions ");
	    /**
	    if (search!=null&&!search.equals("")) {
	        sqlExceptSelect.append(" AND (b.title like ? or b.content like ? )");
	        parameters.add("%" + search + "%");
	        parameters.add("%" + search + "%");
	    } 
	     **/
	    sqlExceptSelect.append(whereQuery(question));
	    sqlExceptSelect.append(orderbyQuery(question));
	    
	    return this.paginateDataTables(pageNum, pageSize, select, sqlExceptSelect.toString());
	}
	/**
	 * query where查询
	 * 
	 * */
	private String whereQuery(QueryQuestion question){
		String where=" where 1=1  and isdel = 0 and isenable = 1 ";
		if(question.getCode()!=null&&!question.getCode().equals("")){
			where += " and code like '%"+question.getCode()+"%'";
		}
		if(question.getItembankid()!=null&&!question.getItembankid().equals("")){
			where += " and itembank_id = '"+question.getItembankid()+"'";
		}
		if(question.getQuestionstype()!=null&&!question.getQuestionstype().equals("0")){
			where += " and questiontype = '"+question.getQuestionstype()+"'";
		}
		if(question.getSubjectid()!=null&&!question.getSubjectid().equals("")){
			where += " and subject_id = '"+question.getSubjectid()+"'";
		}
		return where;
		
	}
	/**
	 * query order by 
	 * 
	 * */
	private String orderbyQuery(QueryQuestion question){
		String orderby = " order by create_date desc ";
		return orderby;
		
	}
}
